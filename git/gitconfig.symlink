[alias]
    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph --abbrev-commit
    # View the current working tree status using the short format
    s = status -s
    # Show the diff between the latest commit and the current state
    d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
    # `git di $number` shows the diff between the state `$number` revisions ago and the current state
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
    # Pull in remote changes for the current repository and all its submodules
    p = !"git pull; git submodule foreach git pull origin master"
    # Clone a repository including all submodules
    c = clone --recursive
    # Commit all changes
    ca = !git add -A && git commit -av
    # Switch to a branch, creating it if necessary
    go = checkout -B
    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v
    # Credit an author on the latest commit
    credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
    # Interactive rebase with the given number of latest commits
    reb = "!r() { git rebase -i HEAD~$1; }; r"
    ci = commit
    cins = commit --no-gpg-sign
    co = checkout
    st = status
    br = branch
    sh = show --stat --oneline
    lg = "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
    ls = log --show-signature
    lf = log --pretty=fuller
    sign-rebase = "!GIT_SEQUENCE_EDITOR='sed -i -re s/^pick/e/' sh -c 'git rebase -i $1 && while test -f .git/rebase-merge/interactive; do git commit --amend -S --no-edit && git rebase --continue; done' -"
    wip = !git add -A && git commit -m "WIP" -an --no-gpg-sign
    amend = commit --amend -an --no-edit
    up = !gitup commit

[color]
    # Use colors in Git commands that are capable of colored output when outputting to the terminal
    ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[commit]
    gpgsign = true
    sign = true

[core]
    # Use custom `.gitignore` and `.gitattributes`
	excludesfile = /Users/ajgon/.gitignore
    attributesfile = ~/.gitattributes
    editor = vim
    pager = $HOME/.scripts/diff-highlight

[homebrew]
    analyticsdisabled = true

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true

[push]
    default = simple
    followTags = true

[transfer]
    fsckobjects = true

[user]
    name = Igor Rzegocki
    email = igor@rzegocki.pl
    signingkey = 26B27548

[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
